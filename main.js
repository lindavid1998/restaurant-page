(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>A});var r=t(537),o=t.n(r),i=t(645),a=t.n(i)()(o());a.push([n.id,"* {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box; \n}\n\nbody {\n    background-color: rgb(31, 32, 32);\n    font-family: 'Lora', serif;\n    color: white;\n}\n\n.content {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n\n.header-text,\n.hero-image,\n.hero-text,\n.secondary-media {\n    width: 900px;\n}\n\n.header {\n    display: flex;\n    justify-content: center;\n    padding: 30px;\n    width: 100%;\n\n    font-size: 1.4rem;\n    color: white;\n}\n\n.header-text {\n    display: flex;\n    justify-content: space-between;\n}\n\n.restaurant-name, .nav-item {\n    padding: 5px;\n}\n\n.nav-bar div {\n    border-bottom: 2px solid transparent;\n    margin-bottom: -2px;\n    transition: border-bottom 1s;\n}\n\n.nav-bar div:hover {\n    border-bottom: 2px solid white;\n}\n\n.nav-bar {\n    display: flex;\n    gap: 25px;\n}\n\n.hero-image {\n    margin-top: 10px;            \n}\n\n.hero-image img {\n    max-width: 100%;\n    height: auto;\n}\n\n.hero-text {\n    color: white;\n    font-size: 2.5rem;\n    width: 380px;\n    text-align: center;\n    padding: 100px 0px;\n}\n\n.secondary-media {\n    display: grid;\n    grid-template-rows: 1fr;\n    grid-template-columns: repeat(4, 1fr);\n    margin-bottom: 50px;\n    color: black;\n}\n\n.secondary-media .text {\n    grid-column: 2 / 5;\n    grid-row: 1;\n    background-color: rgb(170, 163, 130);\n    font-size: 1.8rem;\n    font-weight: 600;\n    order: 1;\n    text-align: left;\n    padding: 250px 90px 250px 50%;\n}\n\n#veggie {\n    grid-column: 1 / 3;\n    grid-row: 1;\n    height: 80%;\n    width: 105%;\n\n    margin-top: 60px;\n    margin-bottom: 60px;\n    margin-right: -3px;\n    order: 2;\n}\n\n.button {\n    appearance: none;\n    outline: none;\n    background-color: transparent;\n    font: inherit;\n    font-size: 1.1rem;\n    border: 2px solid black;\n    padding: 5px;\n    margin-top: 10px;\n}\n\n.button:hover {\n    background-color: black;\n    color: white;\n    transition: background-color 1s, color 1s;\n}\n\n/* menu */\n\n.menu {\n    width: 900px;\n}\n\nh1 {\n    margin-bottom: 20px;\n}\n\n.appetizers, .entrees {\n    display: grid;\n    grid-template-rows: 1fr;\n    grid-template-columns: repeat(3, 1fr);\n    margin-bottom: 20px;\n}\n\n.item-picture {\n    width: 250px;\n    height: 250px;\n    object-fit: cover;\n}\n\n/* contact */\n\n.title {\n    text-align: center;\n    font-size: 3rem;\n}\n\n.california {\n    width: 900px;\n}\n\n.card {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    background-color: rgb(35, 35, 35);\n    padding: 40px 30px;\n}\n\n.city {\n    font-size: 1.5rem;\n}\n\n.description, .address {\n    margin-bottom: 20px;\n}\n\n.locations {\n    display: grid;\n    grid-template-columns: repeat(3, 1fr);\n    gap: 70px;\n}\n\n.address div {\n    text-align: center;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,SAAS;IACT,UAAU;IACV,sBAAsB;AAC1B;;AAEA;IACI,iCAAiC;IACjC,0BAA0B;IAC1B,YAAY;AAChB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;AACvB;;AAEA;;;;IAII,YAAY;AAChB;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,aAAa;IACb,WAAW;;IAEX,iBAAiB;IACjB,YAAY;AAChB;;AAEA;IACI,aAAa;IACb,8BAA8B;AAClC;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,oCAAoC;IACpC,mBAAmB;IACnB,4BAA4B;AAChC;;AAEA;IACI,8BAA8B;AAClC;;AAEA;IACI,aAAa;IACb,SAAS;AACb;;AAEA;IACI,gBAAgB;AACpB;;AAEA;IACI,eAAe;IACf,YAAY;AAChB;;AAEA;IACI,YAAY;IACZ,iBAAiB;IACjB,YAAY;IACZ,kBAAkB;IAClB,kBAAkB;AACtB;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,qCAAqC;IACrC,mBAAmB;IACnB,YAAY;AAChB;;AAEA;IACI,kBAAkB;IAClB,WAAW;IACX,oCAAoC;IACpC,iBAAiB;IACjB,gBAAgB;IAChB,QAAQ;IACR,gBAAgB;IAChB,6BAA6B;AACjC;;AAEA;IACI,kBAAkB;IAClB,WAAW;IACX,WAAW;IACX,WAAW;;IAEX,gBAAgB;IAChB,mBAAmB;IACnB,kBAAkB;IAClB,QAAQ;AACZ;;AAEA;IACI,gBAAgB;IAChB,aAAa;IACb,6BAA6B;IAC7B,aAAa;IACb,iBAAiB;IACjB,uBAAuB;IACvB,YAAY;IACZ,gBAAgB;AACpB;;AAEA;IACI,uBAAuB;IACvB,YAAY;IACZ,yCAAyC;AAC7C;;AAEA,SAAS;;AAET;IACI,YAAY;AAChB;;AAEA;IACI,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,qCAAqC;IACrC,mBAAmB;AACvB;;AAEA;IACI,YAAY;IACZ,aAAa;IACb,iBAAiB;AACrB;;AAEA,YAAY;;AAEZ;IACI,kBAAkB;IAClB,eAAe;AACnB;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,iCAAiC;IACjC,kBAAkB;AACtB;;AAEA;IACI,iBAAiB;AACrB;;AAEA;IACI,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,qCAAqC;IACrC,SAAS;AACb;;AAEA;IACI,kBAAkB;AACtB",sourcesContent:["* {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box; \n}\n\nbody {\n    background-color: rgb(31, 32, 32);\n    font-family: 'Lora', serif;\n    color: white;\n}\n\n.content {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n\n.header-text,\n.hero-image,\n.hero-text,\n.secondary-media {\n    width: 900px;\n}\n\n.header {\n    display: flex;\n    justify-content: center;\n    padding: 30px;\n    width: 100%;\n\n    font-size: 1.4rem;\n    color: white;\n}\n\n.header-text {\n    display: flex;\n    justify-content: space-between;\n}\n\n.restaurant-name, .nav-item {\n    padding: 5px;\n}\n\n.nav-bar div {\n    border-bottom: 2px solid transparent;\n    margin-bottom: -2px;\n    transition: border-bottom 1s;\n}\n\n.nav-bar div:hover {\n    border-bottom: 2px solid white;\n}\n\n.nav-bar {\n    display: flex;\n    gap: 25px;\n}\n\n.hero-image {\n    margin-top: 10px;            \n}\n\n.hero-image img {\n    max-width: 100%;\n    height: auto;\n}\n\n.hero-text {\n    color: white;\n    font-size: 2.5rem;\n    width: 380px;\n    text-align: center;\n    padding: 100px 0px;\n}\n\n.secondary-media {\n    display: grid;\n    grid-template-rows: 1fr;\n    grid-template-columns: repeat(4, 1fr);\n    margin-bottom: 50px;\n    color: black;\n}\n\n.secondary-media .text {\n    grid-column: 2 / 5;\n    grid-row: 1;\n    background-color: rgb(170, 163, 130);\n    font-size: 1.8rem;\n    font-weight: 600;\n    order: 1;\n    text-align: left;\n    padding: 250px 90px 250px 50%;\n}\n\n#veggie {\n    grid-column: 1 / 3;\n    grid-row: 1;\n    height: 80%;\n    width: 105%;\n\n    margin-top: 60px;\n    margin-bottom: 60px;\n    margin-right: -3px;\n    order: 2;\n}\n\n.button {\n    appearance: none;\n    outline: none;\n    background-color: transparent;\n    font: inherit;\n    font-size: 1.1rem;\n    border: 2px solid black;\n    padding: 5px;\n    margin-top: 10px;\n}\n\n.button:hover {\n    background-color: black;\n    color: white;\n    transition: background-color 1s, color 1s;\n}\n\n/* menu */\n\n.menu {\n    width: 900px;\n}\n\nh1 {\n    margin-bottom: 20px;\n}\n\n.appetizers, .entrees {\n    display: grid;\n    grid-template-rows: 1fr;\n    grid-template-columns: repeat(3, 1fr);\n    margin-bottom: 20px;\n}\n\n.item-picture {\n    width: 250px;\n    height: 250px;\n    object-fit: cover;\n}\n\n/* contact */\n\n.title {\n    text-align: center;\n    font-size: 3rem;\n}\n\n.california {\n    width: 900px;\n}\n\n.card {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    background-color: rgb(35, 35, 35);\n    padding: 40px 30px;\n}\n\n.city {\n    font-size: 1.5rem;\n}\n\n.description, .address {\n    margin-bottom: 20px;\n}\n\n.locations {\n    display: grid;\n    grid-template-columns: repeat(3, 1fr);\n    gap: 70px;\n}\n\n.address div {\n    text-align: center;\n}"],sourceRoot:""}]);const A=a},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,o,i){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(r)for(var A=0;A<this.length;A++){var c=this[A][0];null!=c&&(a[c]=!0)}for(var d=0;d<n.length;d++){var s=[].concat(n[d]);r&&a[s[0]]||(void 0!==i&&(void 0===s[5]||(s[1]="@layer".concat(s[5].length>0?" ".concat(s[5]):""," {").concat(s[1],"}")),s[5]=i),t&&(s[2]?(s[1]="@media ".concat(s[2]," {").concat(s[1],"}"),s[2]=t):s[2]=t),o&&(s[4]?(s[1]="@supports (".concat(s[4],") {").concat(s[1],"}"),s[4]=o):s[4]="".concat(o)),e.push(s))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),i="/*# ".concat(o," */"),a=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(a).concat([i]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var i={},a=[],A=0;A<n.length;A++){var c=n[A],d=r.base?c[0]+r.base:c[0],s=i[d]||0,l="".concat(d," ").concat(s);i[d]=s+1;var p=t(l),u={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var m=o(u,r);r.byIndex=A,e.splice(A,0,{identifier:l,updater:m,references:1})}a.push(l)}return a}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var i=r(n=n||[],o=o||{});return function(n){n=n||[];for(var a=0;a<i.length;a++){var A=t(i[a]);e[A].references--}for(var c=r(n,o),d=0;d<i.length;d++){var s=t(i[d]);0===e[s].references&&(e[s].updater(),e.splice(s,1))}i=c}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(r){var o=e[r];if(void 0!==o)return o.exports;var i=e[r]={id:r,exports:{}};return n[r](i,i.exports,t),i.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var r=e.getElementsByTagName("script");r.length&&(n=r[r.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.nc=void 0,(()=>{function n(n,e=""){let t=document.createElement("div");return t.classList.add(n),t.textContent=e,t}function e(n,e=[]){for(let t=0;t<e.length;t++)n.appendChild(e[t])}const r=t.p+"70e2e033941127e233d3.jpeg",o=t.p+"d070833d724aac6905c8.jpeg";function i(){!function(){let e=n("hero-image"),t=document.createElement("img");t.setAttribute("src",r),t.setAttribute("alt","Xiao long bao from Din Tai Fung"),e.appendChild(t),document.querySelector(".content").appendChild(e)}(),function(){let e=n("hero-text","Shaped by tradition, crafted by hand.");document.querySelector(".content").appendChild(e)}(),function(){let t=document.createElement("img");t.setAttribute("id","veggie"),t.setAttribute("src",o),t.setAttribute("alt","Veggie");let r=document.createElement("p");r.textContent="A vegetarian and vegan favorite.";let i=document.createElement("button");i.textContent="Learn more",i.classList.add("button");let a=n("text");e(a,[r,i]);let A=n("secondary-media");e(A,[t,a]),document.querySelector(".content").appendChild(A)}()}const a=t.p+"e9a279880f91722b87d6.jpeg",A=t.p+"f1c38029ef55744505c7.jpeg",c=t.p+"907d06e73914d1c2e443.jpeg",d=t.p+"372ffb821d729f28f584.jpeg";function s(t){let[r,o,i]=t,a=document.createElement("img");a.setAttribute("src",r),a.setAttribute("alt",o),a.setAttribute("class","item-picture");let A=n("item-name",o),c=n("cost",i),d=n("menu-item");return e(d,[a,A,c]),d}function l(e,t){let r=n(e);for(let n=0;n<t.length;n++)r.appendChild(s(t[n]));return r}let p=[{city:"Arcadia",description:"Westfield Santa Anita",street:"400 S Baldwin Ave",zip:"Arcadia, CA 91007",phone:"(626) 446-8588"},{city:"Costa Mesa",description:"South Coast Plaza",street:"3333 Bristol St",zip:"Costa Mesa, CA 92626",phone:"(714) 549-3388"},{city:"Los Angeles",description:"Westfield Centruy City",street:"10250 Santa Monica Blvd",zip:"Los Angeles, CA 90067",phone:"(424) 382-1118"}];function u(t){let r=document.createElement("div");r.textContent=t.street;let o=document.createElement("div");o.textContent=t.zip;let i=n("address");e(i,[r,o]);let a=n("city",t.city),A=n("description",t.description),c=n("phone",t.phone),d=n("card");return e(d,[a,A,i,c]),d}var m=t(379),g=t.n(m),C=t(795),f=t.n(C),h=t(569),B=t.n(h),b=t(565),x=t.n(b),I=t(216),v=t.n(I),y=t(589),w=t.n(y),E=t(426),k={};k.styleTagTransform=w(),k.setAttributes=x(),k.insert=B().bind(null,"head"),k.domAPI=f(),k.insertStyleElement=v(),g()(E.Z,k),E.Z&&E.Z.locals&&E.Z.locals,function(){let t=n("nav-item","Home");t.setAttribute("id","home");let r=n("nav-item","Menu");r.setAttribute("id","menu");let o=n("nav-item","Locations");o.setAttribute("id","locations");let i=n("nav-bar");e(i,[t,r,o]);let a=n("restaurant-name","Not Din Tai Fung"),A=n("header-text");e(A,[a,i]);let c=n("header");c.appendChild(A),document.querySelector(".content").appendChild(c)}(),i();let S="home";document.querySelectorAll(".nav-item").forEach((t=>{t.addEventListener("click",(()=>{t.id!==S&&(function(){let n=document.querySelector(".content");for(;n.childNodes.length>1;)n.removeChild(n.lastChild)}(),"home"===t.id?(i(),S="home"):"menu"===t.id?(function(){let t=[[A,"Cucumber salad","$10"],[d,"Hot & Sour Soup (Pork)","$11"],[c,"Soy Noodle Salad","$9"]],o=[[r,"Pork Xiao Long Bao","$23"],[a,"Chicken Dumplings","$19"]],i=n("menu"),s=document.createElement("h1");s.textContent="Appetizers";let p=l("appetizers",t),u=document.createElement("h1");u.textContent="Entrees",e(i,[s,p,u,l("entrees",o)]),document.querySelector(".content").appendChild(i)}(),S="menu"):(function(){let t=n("title","Locations"),r=document.createElement("h1");r.textContent="California",r.classList.add("california");let o=n("locations");for(let n=0;n<p.length;n++)o.appendChild(u(p[n]));e(document.querySelector(".content"),[t,r,o])}(),S="locations"))}))}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,